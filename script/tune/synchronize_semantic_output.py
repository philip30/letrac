#!/usr/bin/env python

import sys
import re

err = [];
out = [];
EMPTY_ANSWER = "Ans = []"

with open (sys.argv[1],"r") as f:
    err = f.readlines()

with open (sys.argv[2],"r") as f:
    out = f.readlines()

ep = 25
op = 0

while ep != len(err):
    err[ep] = err[ep].strip()
    if ep > len(err):
        print >> sys.stderr, "Error pointer goes out of bounds"
        sys.exit(1)
    if err[ep].startswith('Res = success ?'):
        print out[op].strip()
        op += 1
        ep += 2
    elif err[ep].startswith('Res = time_out ?'):
        print EMPTY_ANSWER
        ep += 2
        op += 1
    elif err[ep].startswith('! Existence') or err[ep].startswith('! Domain') or err[ep].startswith('! Type'):
        print EMPTY_ANSWER
        ep += 3
    elif err[ep].startswith('! Inst'):
        print EMPTY_ANSWER
        ep += 2
    elif re.match('[A-Z] = ',err[ep]):
        if err[ep].endswith('?'): 
            ep += 3
            print EMPTY_ANSWER
        else:
            k = 1
            while ep+k < len(err) and not err[ep+k].startswith('Res ='):
                k+=1
            ep += 2 + k
    elif err[ep].startswith('no'):
        print EMPTY_ANSWER
        ep += 1
    elif err[ep].startswith('! Syntax'):
        print EMPTY_ANSWER
        ep += 6
    else:
        print >> sys.stderr, "Unrecognized pattern generated by SICSTUS", err[ep]
        sys.exit(1)


